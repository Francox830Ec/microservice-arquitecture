services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: micros-arq_zookeeper
    hostname: zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: micros-arq_kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "${KAFKA_PORT}:${KAFKA_PORT}"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_HOST}:${KAFKA_PORT},PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  schema-registry:
    image: confluentinc/cp-schema-registry:7.6.1
    container_name: micros-arq_schema-registry
    hostname: schema-registry
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "${KAFKA_HOST}:${KAFKA_PORT}"
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  debezium:
    image: debezium/connect:2.6
    container_name: micros-arq_debezium
    depends_on:
      - kafka
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: ${KAFKA_HOST}:${KAFKA_PORT}
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081

  client-postgres:
    image: postgres:16-alpine
    container_name: client-person-service_postgres_16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${CLIENT_PERSON_DB}

  account-postgres:
    image: debezium/postgres:16
    container_name: account-movement-service_postgres_16
    ports:
      - "5436:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${ACCOUNT_MOVEMENT_DB}

  redis:
    image: redis:7.0-alpine
    container_name: account-movement-service_redis_7.0
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}

  client-person-service:
    build:
      context: ./client-person-service
    image: client-person-service:latest
    container_name: client-person-service
    depends_on:
      - kafka
      - client-postgres
    ports:
      - "${CLIENT_PERSON_PORT}:3001"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://client-postgres:5432/${CLIENT_PERSON_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_HOST}:${KAFKA_PORT}

  account-movement-service:
    build:
      context: ./account-movement-service
    image: account-movement-service:latest
    container_name: account-movement-service
    depends_on:
      - kafka
      - account-postgres
      - redis
    ports:
      - "${ACCOUNT_MOVEMENT_PORT}:3002"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://account-postgres:5432/${ACCOUNT_MOVEMENT_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_HOST}:${KAFKA_PORT}
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_PASSWORD: ${REDIS_PASSWORD}